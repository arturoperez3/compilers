State 31 conflicts: 1 shift/reduce
State 33 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: INT
    3    | STRING
    4    | BREAK
    5    | lvalue
    6    | NIL
    7    | exp PLUS exp
    8    | exp MINUS exp
    9    | exp TIMES exp
   10    | exp DIVIDE exp
   11    | MINUS exp
   12    | exp EQ exp
   13    | exp NEQ exp
   14    | exp GT exp
   15    | exp LT exp
   16    | exp GE exp
   17    | exp LE exp
   18    | exp AND exp
   19    | exp OR exp
   20    | lvalue ASSIGN exp
   21    | IF exp THEN exp
   22    | IF exp THEN exp ELSE exp
   23    | WHILE exp DO exp
   24    | FOR ID ASSIGN exp TO exp DO exp
   25    | LPAREN RPAREN
   26    | LPAREN exp RPAREN
   27    | LPAREN seq RPAREN
   28    | lvalue LBRACK exp RBRACK OF exp
   29    | ID LPAREN arglist RPAREN
   30    | ID LBRACE reclist RBRACE
   31    | LET decs IN expseq END

   32 decs: %empty
   33     | dec decs

   34 dec: tydeclist
   35    | vardec
   36    | fundeclist

   37 tydeclist: tydec tydeclist
   38          | tydec

   39 fundeclist: fundec fundeclist
   40           | fundec

   41 tydec: TYPE ID EQ ty

   42 ty: ID
   43   | LBRACE tyfields RBRACE
   44   | ARRAY OF ID

   45 tyfields: %empty
   46         | fieldseq

   47 fieldseq: tyfield
   48         | tyfield COMMA fieldseq

   49 tyfield: ID COLON ID

   50 vardec: VAR ID ASSIGN exp
   51       | VAR ID COLON ID ASSIGN exp

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   54 expseq: %empty
   55       | list

   56 list: exp
   57     | exp SEMICOLON list

   58 seq: exp SEMICOLON list

   59 reclist: %empty
   60        | reclist2

   61 reclist2: ID EQ exp
   62         | ID EQ exp COMMA reclist2

   63 arglist: %empty
   64        | arglist2

   65 arglist2: exp
   66         | exp COMMA arglist2

   67 lvalue: ID
   68       | lvalue DOT ID
   69       | lvalue LBRACK exp RBRACK


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 24 29 30 41 42 44 49 50 51 52 53 61 62 67 68
STRING (259) 3
INT (260) 2
COMMA (261) 48 62 66
COLON (262) 49 51 53
SEMICOLON (263) 57 58
LPAREN (264) 25 26 27 29 52 53
RPAREN (265) 25 26 27 29 52 53
LBRACK (266) 28 69
RBRACK (267) 28 69
LBRACE (268) 30 43
RBRACE (269) 30 43
DOT (270) 68
PLUS (271) 7
MINUS (272) 8 11
TIMES (273) 9
DIVIDE (274) 10
EQ (275) 12 41 52 53 61 62
NEQ (276) 13
LT (277) 15
LE (278) 17
GT (279) 14
GE (280) 16
AND (281) 18
OR (282) 19
ASSIGN (283) 20 24 50 51
ARRAY (284) 44
IF (285) 21 22
THEN (286) 21 22
ELSE (287) 22
WHILE (288) 23
FOR (289) 24
TO (290) 24
DO (291) 23 24
LET (292) 31
IN (293) 31
END (294) 31
OF (295) 28 44
BREAK (296) 4
NIL (297) 6
FUNCTION (298) 52 53
VAR (299) 50 51
TYPE (300) 41
STMT (301)
ARRAY_LITERAL (302)
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
exp (51)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31, on right: 1 7 8 9 10 11 12 13 14 15
    16 17 18 19 20 21 22 23 24 26 28 50 51 52 53 56 57 58 61 62 65
    66 69
decs (52)
    on left: 32 33, on right: 31 33
dec (53)
    on left: 34 35 36, on right: 33
tydeclist (54)
    on left: 37 38, on right: 34 37
fundeclist (55)
    on left: 39 40, on right: 36 39
tydec (56)
    on left: 41, on right: 37 38
ty (57)
    on left: 42 43 44, on right: 41
tyfields (58)
    on left: 45 46, on right: 43 52 53
fieldseq (59)
    on left: 47 48, on right: 46 48
tyfield (60)
    on left: 49, on right: 47 48
vardec (61)
    on left: 50 51, on right: 35
fundec (62)
    on left: 52 53, on right: 39 40
expseq (63)
    on left: 54 55, on right: 31
list (64)
    on left: 56 57, on right: 55 57 58
seq (65)
    on left: 58, on right: 27
reclist (66)
    on left: 59 60, on right: 30
reclist2 (67)
    on left: 61 62, on right: 60 62
arglist (68)
    on left: 63 64, on right: 29
arglist2 (69)
    on left: 65 66, on right: 64 66
lvalue (70)
    on left: 67 68 69, on right: 5 20 28 68 69


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14


State 1

   29 exp: ID . LPAREN arglist RPAREN
   30    | ID . LBRACE reclist RBRACE
   67 lvalue: ID .

    LPAREN  shift, and go to state 15
    LBRACE  shift, and go to state 16

    $default  reduce using rule 67 (lvalue)


State 2

    3 exp: STRING .

    $default  reduce using rule 3 (exp)


State 3

    2 exp: INT .

    $default  reduce using rule 2 (exp)


State 4

   25 exp: LPAREN . RPAREN
   26    | LPAREN . exp RPAREN
   27    | LPAREN . seq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 17
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 18
    seq     go to state 19
    lvalue  go to state 14


State 5

   11 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 20
    lvalue  go to state 14


State 6

   21 exp: IF . exp THEN exp
   22    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 21
    lvalue  go to state 14


State 7

   23 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 22
    lvalue  go to state 14


State 8

   24 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 23


State 9

   31 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 32 (decs)

    decs        go to state 27
    dec         go to state 28
    tydeclist   go to state 29
    fundeclist  go to state 30
    tydec       go to state 31
    vardec      go to state 32
    fundec      go to state 33


State 10

    4 exp: BREAK .

    $default  reduce using rule 4 (exp)


State 11

    6 exp: NIL .

    $default  reduce using rule 6 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 34


State 13

    1 program: exp .
    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 1 (program)


State 14

    5 exp: lvalue .
   20    | lvalue . ASSIGN exp
   28    | lvalue . LBRACK exp RBRACK OF exp
   68 lvalue: lvalue . DOT ID
   69       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 47
    DOT     shift, and go to state 48
    ASSIGN  shift, and go to state 49

    $default  reduce using rule 5 (exp)


State 15

   29 exp: ID LPAREN . arglist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 63 (arglist)

    exp       go to state 50
    arglist   go to state 51
    arglist2  go to state 52
    lvalue    go to state 14


State 16

   30 exp: ID LBRACE . reclist RBRACE

    ID  shift, and go to state 53

    $default  reduce using rule 59 (reclist)

    reclist   go to state 54
    reclist2  go to state 55


State 17

   25 exp: LPAREN RPAREN .

    $default  reduce using rule 25 (exp)


State 18

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   26    | LPAREN exp . RPAREN
   58 seq: exp . SEMICOLON list

    SEMICOLON  shift, and go to state 56
    RPAREN     shift, and go to state 57
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46


State 19

   27 exp: LPAREN seq . RPAREN

    RPAREN  shift, and go to state 58


State 20

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   11    | MINUS exp .
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp

    $default  reduce using rule 11 (exp)


State 21

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   21    | IF exp . THEN exp
   22    | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46
    THEN    shift, and go to state 59


State 22

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   23    | WHILE exp . DO exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46
    DO      shift, and go to state 60


State 23

   24 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 61


State 24

   52 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 62


State 25

   50 vardec: VAR . ID ASSIGN exp
   51       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 63


State 26

   41 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 64


State 27

   31 exp: LET decs . IN expseq END

    IN  shift, and go to state 65


State 28

   33 decs: dec . decs

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 32 (decs)

    decs        go to state 66
    dec         go to state 28
    tydeclist   go to state 29
    fundeclist  go to state 30
    tydec       go to state 31
    vardec      go to state 32
    fundec      go to state 33


State 29

   34 dec: tydeclist .

    $default  reduce using rule 34 (dec)


State 30

   36 dec: fundeclist .

    $default  reduce using rule 36 (dec)


State 31

   37 tydeclist: tydec . tydeclist
   38          | tydec .

    TYPE  shift, and go to state 26

    TYPE      [reduce using rule 38 (tydeclist)]
    $default  reduce using rule 38 (tydeclist)

    tydeclist  go to state 67
    tydec      go to state 31


State 32

   35 dec: vardec .

    $default  reduce using rule 35 (dec)


State 33

   39 fundeclist: fundec . fundeclist
   40           | fundec .

    FUNCTION  shift, and go to state 24

    FUNCTION  [reduce using rule 40 (fundeclist)]
    $default  reduce using rule 40 (fundeclist)

    fundeclist  go to state 68
    fundec      go to state 33


State 34

    0 $accept: program $end .

    $default  accept


State 35

    7 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 69
    lvalue  go to state 14


State 36

    8 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 70
    lvalue  go to state 14


State 37

    9 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 71
    lvalue  go to state 14


State 38

   10 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 72
    lvalue  go to state 14


State 39

   12 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 73
    lvalue  go to state 14


State 40

   13 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 74
    lvalue  go to state 14


State 41

   15 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14


State 42

   17 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 76
    lvalue  go to state 14


State 43

   14 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    lvalue  go to state 14


State 44

   16 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 78
    lvalue  go to state 14


State 45

   18 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 79
    lvalue  go to state 14


State 46

   19 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 80
    lvalue  go to state 14


State 47

   28 exp: lvalue LBRACK . exp RBRACK OF exp
   69 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 81
    lvalue  go to state 14


State 48

   68 lvalue: lvalue DOT . ID

    ID  shift, and go to state 82


State 49

   20 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 83
    lvalue  go to state 14


State 50

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   65 arglist2: exp .
   66         | exp . COMMA arglist2

    COMMA   shift, and go to state 84
    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 65 (arglist2)


State 51

   29 exp: ID LPAREN arglist . RPAREN

    RPAREN  shift, and go to state 85


State 52

   64 arglist: arglist2 .

    $default  reduce using rule 64 (arglist)


State 53

   61 reclist2: ID . EQ exp
   62         | ID . EQ exp COMMA reclist2

    EQ  shift, and go to state 86


State 54

   30 exp: ID LBRACE reclist . RBRACE

    RBRACE  shift, and go to state 87


State 55

   60 reclist: reclist2 .

    $default  reduce using rule 60 (reclist)


State 56

   58 seq: exp SEMICOLON . list

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 88
    list    go to state 89
    lvalue  go to state 14


State 57

   26 exp: LPAREN exp RPAREN .

    $default  reduce using rule 26 (exp)


State 58

   27 exp: LPAREN seq RPAREN .

    $default  reduce using rule 27 (exp)


State 59

   21 exp: IF exp THEN . exp
   22    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 90
    lvalue  go to state 14


State 60

   23 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 91
    lvalue  go to state 14


State 61

   24 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 92
    lvalue  go to state 14


State 62

   52 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 93


State 63

   50 vardec: VAR ID . ASSIGN exp
   51       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 94
    ASSIGN  shift, and go to state 95


State 64

   41 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 96


State 65

   31 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 54 (expseq)

    exp     go to state 88
    expseq  go to state 97
    list    go to state 98
    lvalue  go to state 14


State 66

   33 decs: dec decs .

    $default  reduce using rule 33 (decs)


State 67

   37 tydeclist: tydec tydeclist .

    $default  reduce using rule 37 (tydeclist)


State 68

   39 fundeclist: fundec fundeclist .

    $default  reduce using rule 39 (fundeclist)


State 69

    7 exp: exp . PLUS exp
    7    | exp PLUS exp .
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp

    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    $default  reduce using rule 7 (exp)


State 70

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    8    | exp MINUS exp .
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp

    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    $default  reduce using rule 8 (exp)


State 71

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
    9    | exp TIMES exp .
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp

    $default  reduce using rule 9 (exp)


State 72

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   10    | exp DIVIDE exp .
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp

    $default  reduce using rule 10 (exp)


State 73

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   12    | exp EQ exp .
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 12 (exp)


State 74

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   13    | exp NEQ exp .
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 13 (exp)


State 75

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   15    | exp LT exp .
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


State 76

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   17    | exp LE exp .
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


State 77

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   14    | exp GT exp .
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


State 78

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   16    | exp GE exp .
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 79

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   18    | exp AND exp .
   19    | exp . OR exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44

    $default  reduce using rule 18 (exp)


State 80

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   19    | exp OR exp .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45

    $default  reduce using rule 19 (exp)


State 81

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   28    | lvalue LBRACK exp . RBRACK OF exp
   69 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 99
    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46


State 82

   68 lvalue: lvalue DOT ID .

    $default  reduce using rule 68 (lvalue)


State 83

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   20    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 20 (exp)


State 84

   66 arglist2: exp COMMA . arglist2

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp       go to state 50
    arglist2  go to state 100
    lvalue    go to state 14


State 85

   29 exp: ID LPAREN arglist RPAREN .

    $default  reduce using rule 29 (exp)


State 86

   61 reclist2: ID EQ . exp
   62         | ID EQ . exp COMMA reclist2

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 101
    lvalue  go to state 14


State 87

   30 exp: ID LBRACE reclist RBRACE .

    $default  reduce using rule 30 (exp)


State 88

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   56 list: exp .
   57     | exp . SEMICOLON list

    SEMICOLON  shift, and go to state 102
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    TIMES      shift, and go to state 37
    DIVIDE     shift, and go to state 38
    EQ         shift, and go to state 39
    NEQ        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    AND        shift, and go to state 45
    OR         shift, and go to state 46

    $default  reduce using rule 56 (list)


State 89

   58 seq: exp SEMICOLON list .

    $default  reduce using rule 58 (seq)


State 90

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   21    | IF exp THEN exp .
   22    | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46
    ELSE    shift, and go to state 103

    $default  reduce using rule 21 (exp)


State 91

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   23    | WHILE exp DO exp .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 23 (exp)


State 92

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   24    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46
    TO      shift, and go to state 104


State 93

   52 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   53       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 105

    $default  reduce using rule 45 (tyfields)

    tyfields  go to state 106
    fieldseq  go to state 107
    tyfield   go to state 108


State 94

   51 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 109


State 95

   50 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 110
    lvalue  go to state 14


State 96

   41 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 111
    LBRACE  shift, and go to state 112
    ARRAY   shift, and go to state 113

    ty  go to state 114


State 97

   31 exp: LET decs IN expseq . END

    END  shift, and go to state 115


State 98

   55 expseq: list .

    $default  reduce using rule 55 (expseq)


State 99

   28 exp: lvalue LBRACK exp RBRACK . OF exp
   69 lvalue: lvalue LBRACK exp RBRACK .

    OF  shift, and go to state 116

    $default  reduce using rule 69 (lvalue)


State 100

   66 arglist2: exp COMMA arglist2 .

    $default  reduce using rule 66 (arglist2)


State 101

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   61 reclist2: ID EQ exp .
   62         | ID EQ exp . COMMA reclist2

    COMMA   shift, and go to state 117
    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 61 (reclist2)


State 102

   57 list: exp SEMICOLON . list

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 88
    list    go to state 118
    lvalue  go to state 14


State 103

   22 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 119
    lvalue  go to state 14


State 104

   24 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 120
    lvalue  go to state 14


State 105

   49 tyfield: ID . COLON ID

    COLON  shift, and go to state 121


State 106

   52 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   53       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 122


State 107

   46 tyfields: fieldseq .

    $default  reduce using rule 46 (tyfields)


State 108

   47 fieldseq: tyfield .
   48         | tyfield . COMMA fieldseq

    COMMA  shift, and go to state 123

    $default  reduce using rule 47 (fieldseq)


State 109

   51 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 124


State 110

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   50 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 50 (vardec)


State 111

   42 ty: ID .

    $default  reduce using rule 42 (ty)


State 112

   43 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 105

    $default  reduce using rule 45 (tyfields)

    tyfields  go to state 125
    fieldseq  go to state 107
    tyfield   go to state 108


State 113

   44 ty: ARRAY . OF ID

    OF  shift, and go to state 126


State 114

   41 tydec: TYPE ID EQ ty .

    $default  reduce using rule 41 (tydec)


State 115

   31 exp: LET decs IN expseq END .

    $default  reduce using rule 31 (exp)


State 116

   28 exp: lvalue LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 127
    lvalue  go to state 14


State 117

   62 reclist2: ID EQ exp COMMA . reclist2

    ID  shift, and go to state 53

    reclist2  go to state 128


State 118

   57 list: exp SEMICOLON list .

    $default  reduce using rule 57 (list)


State 119

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   22    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 22 (exp)


State 120

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   24    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46
    DO      shift, and go to state 129


State 121

   49 tyfield: ID COLON . ID

    ID  shift, and go to state 130


State 122

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   53       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 131
    EQ     shift, and go to state 132


State 123

   48 fieldseq: tyfield COMMA . fieldseq

    ID  shift, and go to state 105

    fieldseq  go to state 133
    tyfield   go to state 108


State 124

   51 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 134
    lvalue  go to state 14


State 125

   43 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 135


State 126

   44 ty: ARRAY OF . ID

    ID  shift, and go to state 136


State 127

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   28    | lvalue LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 28 (exp)


State 128

   62 reclist2: ID EQ exp COMMA reclist2 .

    $default  reduce using rule 62 (reclist2)


State 129

   24 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 137
    lvalue  go to state 14


State 130

   49 tyfield: ID COLON ID .

    $default  reduce using rule 49 (tyfield)


State 131

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 138


State 132

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 139
    lvalue  go to state 14


State 133

   48 fieldseq: tyfield COMMA fieldseq .

    $default  reduce using rule 48 (fieldseq)


State 134

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   51 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 51 (vardec)


State 135

   43 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 43 (ty)


State 136

   44 ty: ARRAY OF ID .

    $default  reduce using rule 44 (ty)


State 137

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   24    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 24 (exp)


State 138

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 140


State 139

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 52 (fundec)


State 140

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 141
    lvalue  go to state 14


State 141

    7 exp: exp . PLUS exp
    8    | exp . MINUS exp
    9    | exp . TIMES exp
   10    | exp . DIVIDE exp
   12    | exp . EQ exp
   13    | exp . NEQ exp
   14    | exp . GT exp
   15    | exp . LT exp
   16    | exp . GE exp
   17    | exp . LE exp
   18    | exp . AND exp
   19    | exp . OR exp
   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    TIMES   shift, and go to state 37
    DIVIDE  shift, and go to state 38
    EQ      shift, and go to state 39
    NEQ     shift, and go to state 40
    LT      shift, and go to state 41
    LE      shift, and go to state 42
    GT      shift, and go to state 43
    GE      shift, and go to state 44
    AND     shift, and go to state 45
    OR      shift, and go to state 46

    $default  reduce using rule 53 (fundec)
