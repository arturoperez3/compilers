let
	type aa = array of int
	type bb = int
	type cc = int
	type d = int
	type e = f 
	type f = int
	type e = int
	var arr1 := aa [10] of 0 
	type i = int
	type s = string
	var b:i := 5
	var c:i := 6 
	/* var wrong:int := "wrong" */
	/* var wrong2 := nil */
	/* var wrong3:int := nil */

	/* circular definition stuff */ 

	type tt = d
	type hh = jj  
	type jj = tt


	type intlist = {hd:int, bg:int}
	type longerlist = {hd: int, bg:int, hj:int, jk:int}
	/* type empty = {} */ 
	var n:intlist := nil
	var list:intlist := intlist {hd=0, bg=0}

	var noType := "no type"
	var noType2 := 42

	function foo (a:int) : st = 
		(b := a + 1; 5)

	function bar (g:int) = 
		g := g + 2 

	function kop (h:l, h:p) = 
		h := h + 1

	/* 
	type nul2 = {ty:int, ty2:string, ty3:id2}
	var nil3 : nul2 : = nil
	*/
in 
	b := c; 
	/* arr1[1] := 5; */
	list.bg := 1; 
	/* b := noType2; */ 
	(for i:=0 to 100 do if b=50 then break else (b:=b+1;()));
	(while b < 50 do b:=b+1);
	bar(2)

end