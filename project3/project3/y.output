Rules useless in parser due to conflicts

   25 exp: ID LBRACE recparams RBRACE


State 4 conflicts: 1 shift/reduce
State 17 conflicts: 13 shift/reduce
State 19 conflicts: 1 shift/reduce
State 52 conflicts: 2 shift/reduce
State 55 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 71 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 77 conflicts: 13 shift/reduce
State 80 conflicts: 1 shift/reduce
State 85 conflicts: 28 reduce/reduce
State 88 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: INT
    3    | NIL
    4    | STRING
    5    | exp PLUS exp
    6    | exp MINUS exp
    7    | exp TIMES exp
    8    | exp DIVIDE exp
    9    | MINUS exp
   10    | exp EQ exp
   11    | exp NEQ exp
   12    | exp LT exp
   13    | exp LE exp
   14    | exp GT exp
   15    | exp GE exp
   16    | exp AND exp
   17    | exp OR exp
   18    | LPAREN RPAREN
   19    | LPAREN expSC RPAREN
   20    | LET dec IN expSC END
   21    | IF exp THEN exp ELSE exp
   22    | IF exp THEN exp
   23    | ID LPAREN funcparams RPAREN
   24    | ID LBRACE recparams RBRACE
   25    | ID LBRACE recparams RBRACE
   26    | lvalue LBRACK exp RBRACK OF exp
   27    | lvalue
   28    | lvalue ASSIGN exp
   29    | FOR lvalue ASSIGN exp TO exp DO expSC
   30    | WHILE exp DO expSC
   31    | exp BREAK exp

   32 expSC: exp
   33      | expSC SEMICOLON expSC
   34      | expSC SEMICOLON BREAK SEMICOLON expSC
   35      | %empty

   36 dec: tydec dec
   37    | vardec dec
   38    | fundec dec
   39    | %empty

   40 tydec: TYPE ID EQ ty

   41 vardec: VAR ID ASSIGN exp
   42       | VAR ID COLON ID ASSIGN exp

   43 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   44       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   45 ty: ID
   46   | LBRACE tyfields RBRACE
   47   | ARRAY OF ID

   48 tyfields: %empty
   49         | ID COLON ID
   50         | tyfields COMMA ID COLON ID

   51 lvalue: ID
   52       | lvalue DOT ID
   53       | lvalue LBRACK exp RBRACK

   54 funcparams: funcparams COMMA exp
   55           | exp
   56           | %empty

   57 recparams: recparams COMMA ID EQ exp
   58          | ID EQ exp
   59          | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 23 24 25 40 41 42 43 44 45 47 49 50 51 52 57 58
STRING (259) 4
INT (260) 2
COMMA (261) 50 54 57
COLON (262) 42 44 49 50
SEMICOLON (263) 33 34
LPAREN (264) 18 19 23 43 44
RPAREN (265) 18 19 23 43 44
LBRACK (266) 26 53
RBRACK (267) 26 53
LBRACE (268) 24 25 46
RBRACE (269) 24 25 46
DOT (270) 52
PLUS (271) 5
MINUS (272) 6 9
TIMES (273) 7
DIVIDE (274) 8
EQ (275) 10 40 43 44 57 58
NEQ (276) 11
LT (277) 12
LE (278) 13
GT (279) 14
GE (280) 15
AND (281) 16
OR (282) 17
ASSIGN (283) 28 29 41 42
ARRAY (284) 47
IF (285) 21 22
THEN (286) 21 22
ELSE (287) 21
WHILE (288) 30
FOR (289) 29
TO (290) 29
DO (291) 29 30
LET (292) 20
IN (293) 20
END (294) 20
OF (295) 26 47
BREAK (296) 31 34
NIL (297) 3
FUNCTION (298) 43 44
VAR (299) 41 42
TYPE (300) 40
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31, on right: 1 5 6 7 8 9 10 11 12 13 14
    15 16 17 21 22 26 28 29 30 31 32 41 42 43 44 53 54 55 57 58
expSC (50)
    on left: 32 33 34 35, on right: 19 20 29 30 33 34
dec (51)
    on left: 36 37 38 39, on right: 20 36 37 38
tydec (52)
    on left: 40, on right: 36
vardec (53)
    on left: 41 42, on right: 37
fundec (54)
    on left: 43 44, on right: 38
ty (55)
    on left: 45 46 47, on right: 40
tyfields (56)
    on left: 48 49 50, on right: 43 44 46 50
lvalue (57)
    on left: 51 52 53, on right: 26 27 28 29 52 53
funcparams (58)
    on left: 54 55 56, on right: 23 54
recparams (59)
    on left: 57 58 59, on right: 24 25 57


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    program  go to state 11
    exp      go to state 12
    lvalue   go to state 13


State 1

   23 exp: ID . LPAREN funcparams RPAREN
   24    | ID . LBRACE recparams RBRACE
   25    | ID . LBRACE recparams RBRACE
   51 lvalue: ID .

    LPAREN  shift, and go to state 14
    LBRACE  shift, and go to state 15

    $default  reduce using rule 51 (lvalue)


State 2

    4 exp: STRING .

    $default  reduce using rule 4 (exp)


State 3

    2 exp: INT .

    $default  reduce using rule 2 (exp)


State 4

   18 exp: LPAREN . RPAREN
   19    | LPAREN . expSC RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 16
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    RPAREN    [reduce using rule 35 (expSC)]
    $default  reduce using rule 35 (expSC)

    exp     go to state 17
    expSC   go to state 18
    lvalue  go to state 13


State 5

    9 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 19
    lvalue  go to state 13


State 6

   21 exp: IF . exp THEN exp ELSE exp
   22    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 20
    lvalue  go to state 13


State 7

   30 exp: WHILE . exp DO expSC

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 21
    lvalue  go to state 13


State 8

   29 exp: FOR . lvalue ASSIGN exp TO exp DO expSC

    ID  shift, and go to state 22

    lvalue  go to state 23


State 9

   20 exp: LET . dec IN expSC END

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 39 (dec)

    dec     go to state 27
    tydec   go to state 28
    vardec  go to state 29
    fundec  go to state 30


State 10

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


State 11

    0 $accept: program . $end

    $end  shift, and go to state 31


State 12

    1 program: exp .
    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    $default  reduce using rule 1 (program)


State 13

   26 exp: lvalue . LBRACK exp RBRACK OF exp
   27    | lvalue .
   28    | lvalue . ASSIGN exp
   52 lvalue: lvalue . DOT ID
   53       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 45
    DOT     shift, and go to state 46
    ASSIGN  shift, and go to state 47

    $default  reduce using rule 27 (exp)


State 14

   23 exp: ID LPAREN . funcparams RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    $default  reduce using rule 56 (funcparams)

    exp         go to state 48
    lvalue      go to state 13
    funcparams  go to state 49


State 15

   24 exp: ID LBRACE . recparams RBRACE
   25    | ID LBRACE . recparams RBRACE

    ID  shift, and go to state 50

    $default  reduce using rule 59 (recparams)

    recparams  go to state 51


State 16

   18 exp: LPAREN RPAREN .

    $default  reduce using rule 18 (exp)


State 17

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp
   32 expSC: exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    PLUS      [reduce using rule 32 (expSC)]
    MINUS     [reduce using rule 32 (expSC)]
    TIMES     [reduce using rule 32 (expSC)]
    DIVIDE    [reduce using rule 32 (expSC)]
    EQ        [reduce using rule 32 (expSC)]
    NEQ       [reduce using rule 32 (expSC)]
    LT        [reduce using rule 32 (expSC)]
    LE        [reduce using rule 32 (expSC)]
    GT        [reduce using rule 32 (expSC)]
    GE        [reduce using rule 32 (expSC)]
    AND       [reduce using rule 32 (expSC)]
    OR        [reduce using rule 32 (expSC)]
    BREAK     [reduce using rule 32 (expSC)]
    $default  reduce using rule 32 (expSC)


State 18

   19 exp: LPAREN expSC . RPAREN
   33 expSC: expSC . SEMICOLON expSC
   34      | expSC . SEMICOLON BREAK SEMICOLON expSC

    SEMICOLON  shift, and go to state 52
    RPAREN     shift, and go to state 53


State 19

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
    9    | MINUS exp .
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    BREAK  shift, and go to state 44

    BREAK     [reduce using rule 9 (exp)]
    $default  reduce using rule 9 (exp)


State 20

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   21    | IF exp . THEN exp ELSE exp
   22    | IF exp . THEN exp
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    THEN    shift, and go to state 54
    BREAK   shift, and go to state 44


State 21

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   30    | WHILE exp . DO expSC
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    DO      shift, and go to state 55
    BREAK   shift, and go to state 44


State 22

   51 lvalue: ID .

    $default  reduce using rule 51 (lvalue)


State 23

   29 exp: FOR lvalue . ASSIGN exp TO exp DO expSC
   52 lvalue: lvalue . DOT ID
   53       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 56
    DOT     shift, and go to state 46
    ASSIGN  shift, and go to state 57


State 24

   43 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   44       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 58


State 25

   41 vardec: VAR . ID ASSIGN exp
   42       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 59


State 26

   40 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 60


State 27

   20 exp: LET dec . IN expSC END

    IN  shift, and go to state 61


State 28

   36 dec: tydec . dec

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 39 (dec)

    dec     go to state 62
    tydec   go to state 28
    vardec  go to state 29
    fundec  go to state 30


State 29

   37 dec: vardec . dec

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 39 (dec)

    dec     go to state 63
    tydec   go to state 28
    vardec  go to state 29
    fundec  go to state 30


State 30

   38 dec: fundec . dec

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 39 (dec)

    dec     go to state 64
    tydec   go to state 28
    vardec  go to state 29
    fundec  go to state 30


State 31

    0 $accept: program $end .

    $default  accept


State 32

    5 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 65
    lvalue  go to state 13


State 33

    6 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 66
    lvalue  go to state 13


State 34

    7 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 67
    lvalue  go to state 13


State 35

    8 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 68
    lvalue  go to state 13


State 36

   10 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 69
    lvalue  go to state 13


State 37

   11 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 70
    lvalue  go to state 13


State 38

   12 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 71
    lvalue  go to state 13


State 39

   13 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 72
    lvalue  go to state 13


State 40

   14 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 73
    lvalue  go to state 13


State 41

   15 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 74
    lvalue  go to state 13


State 42

   16 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 75
    lvalue  go to state 13


State 43

   17 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 76
    lvalue  go to state 13


State 44

   31 exp: exp BREAK . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 77
    lvalue  go to state 13


State 45

   26 exp: lvalue LBRACK . exp RBRACK OF exp
   53 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 78
    lvalue  go to state 13


State 46

   52 lvalue: lvalue DOT . ID

    ID  shift, and go to state 79


State 47

   28 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 80
    lvalue  go to state 13


State 48

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp
   55 funcparams: exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    $default  reduce using rule 55 (funcparams)


State 49

   23 exp: ID LPAREN funcparams . RPAREN
   54 funcparams: funcparams . COMMA exp

    COMMA   shift, and go to state 81
    RPAREN  shift, and go to state 82


State 50

   58 recparams: ID . EQ exp

    EQ  shift, and go to state 83


State 51

   24 exp: ID LBRACE recparams . RBRACE
   25    | ID LBRACE recparams . RBRACE
   57 recparams: recparams . COMMA ID EQ exp

    COMMA   shift, and go to state 84
    RBRACE  shift, and go to state 85


State 52

   33 expSC: expSC SEMICOLON . expSC
   34      | expSC SEMICOLON . BREAK SEMICOLON expSC

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 86
    NIL     shift, and go to state 10

    MINUS     [reduce using rule 35 (expSC)]
    BREAK     [reduce using rule 35 (expSC)]
    $default  reduce using rule 35 (expSC)

    exp     go to state 17
    expSC   go to state 87
    lvalue  go to state 13


State 53

   19 exp: LPAREN expSC RPAREN .

    $default  reduce using rule 19 (exp)


State 54

   21 exp: IF exp THEN . exp ELSE exp
   22    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 88
    lvalue  go to state 13


State 55

   30 exp: WHILE exp DO . expSC

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    MINUS     [reduce using rule 35 (expSC)]
    $default  reduce using rule 35 (expSC)

    exp     go to state 17
    expSC   go to state 89
    lvalue  go to state 13


State 56

   53 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 90
    lvalue  go to state 13


State 57

   29 exp: FOR lvalue ASSIGN . exp TO exp DO expSC

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 91
    lvalue  go to state 13


State 58

   43 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   44       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 92


State 59

   41 vardec: VAR ID . ASSIGN exp
   42       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 93
    ASSIGN  shift, and go to state 94


State 60

   40 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 95


State 61

   20 exp: LET dec IN . expSC END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    $default  reduce using rule 35 (expSC)

    exp     go to state 17
    expSC   go to state 96
    lvalue  go to state 13


State 62

   36 dec: tydec dec .

    $default  reduce using rule 36 (dec)


State 63

   37 dec: vardec dec .

    $default  reduce using rule 37 (dec)


State 64

   38 dec: fundec dec .

    $default  reduce using rule 38 (dec)


State 65

    5 exp: exp . PLUS exp
    5    | exp PLUS exp .
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    BREAK   shift, and go to state 44

    BREAK     [reduce using rule 5 (exp)]
    $default  reduce using rule 5 (exp)


State 66

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    6    | exp MINUS exp .
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    BREAK   shift, and go to state 44

    BREAK     [reduce using rule 6 (exp)]
    $default  reduce using rule 6 (exp)


State 67

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    7    | exp TIMES exp .
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    BREAK  shift, and go to state 44

    BREAK     [reduce using rule 7 (exp)]
    $default  reduce using rule 7 (exp)


State 68

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
    8    | exp DIVIDE exp .
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    BREAK  shift, and go to state 44

    BREAK     [reduce using rule 8 (exp)]
    $default  reduce using rule 8 (exp)


State 69

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   10    | exp EQ exp .
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    BREAK   shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    BREAK     [reduce using rule 10 (exp)]
    $default  reduce using rule 10 (exp)


State 70

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   11    | exp NEQ exp .
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    BREAK   shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    BREAK     [reduce using rule 11 (exp)]
    $default  reduce using rule 11 (exp)


State 71

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   12    | exp LT exp .
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    BREAK   shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    BREAK     [reduce using rule 12 (exp)]
    $default  reduce using rule 12 (exp)


State 72

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   13    | exp LE exp .
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    BREAK   shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    BREAK     [reduce using rule 13 (exp)]
    $default  reduce using rule 13 (exp)


State 73

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   14    | exp GT exp .
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    BREAK   shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    BREAK     [reduce using rule 14 (exp)]
    $default  reduce using rule 14 (exp)


State 74

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   15    | exp GE exp .
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    BREAK   shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    BREAK     [reduce using rule 15 (exp)]
    $default  reduce using rule 15 (exp)


State 75

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   16    | exp AND exp .
   17    | exp . OR exp
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    BREAK   shift, and go to state 44

    BREAK     [reduce using rule 16 (exp)]
    $default  reduce using rule 16 (exp)


State 76

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   17    | exp OR exp .
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    BREAK   shift, and go to state 44

    BREAK     [reduce using rule 17 (exp)]
    $default  reduce using rule 17 (exp)


State 77

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp
   31    | exp BREAK exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    PLUS      [reduce using rule 31 (exp)]
    MINUS     [reduce using rule 31 (exp)]
    TIMES     [reduce using rule 31 (exp)]
    DIVIDE    [reduce using rule 31 (exp)]
    EQ        [reduce using rule 31 (exp)]
    NEQ       [reduce using rule 31 (exp)]
    LT        [reduce using rule 31 (exp)]
    LE        [reduce using rule 31 (exp)]
    GT        [reduce using rule 31 (exp)]
    GE        [reduce using rule 31 (exp)]
    AND       [reduce using rule 31 (exp)]
    OR        [reduce using rule 31 (exp)]
    BREAK     [reduce using rule 31 (exp)]
    $default  reduce using rule 31 (exp)


State 78

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   26    | lvalue LBRACK exp . RBRACK OF exp
   31    | exp . BREAK exp
   53 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 97
    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44


State 79

   52 lvalue: lvalue DOT ID .

    $default  reduce using rule 52 (lvalue)


State 80

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   28    | lvalue ASSIGN exp .
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    BREAK     [reduce using rule 28 (exp)]
    $default  reduce using rule 28 (exp)


State 81

   54 funcparams: funcparams COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 98
    lvalue  go to state 13


State 82

   23 exp: ID LPAREN funcparams RPAREN .

    $default  reduce using rule 23 (exp)


State 83

   58 recparams: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 99
    lvalue  go to state 13


State 84

   57 recparams: recparams COMMA . ID EQ exp

    ID  shift, and go to state 100


State 85

   24 exp: ID LBRACE recparams RBRACE .
   25    | ID LBRACE recparams RBRACE .

    $end       reduce using rule 24 (exp)
    $end       [reduce using rule 25 (exp)]
    COMMA      reduce using rule 24 (exp)
    COMMA      [reduce using rule 25 (exp)]
    SEMICOLON  reduce using rule 24 (exp)
    SEMICOLON  [reduce using rule 25 (exp)]
    RPAREN     reduce using rule 24 (exp)
    RPAREN     [reduce using rule 25 (exp)]
    RBRACK     reduce using rule 24 (exp)
    RBRACK     [reduce using rule 25 (exp)]
    RBRACE     reduce using rule 24 (exp)
    RBRACE     [reduce using rule 25 (exp)]
    PLUS       reduce using rule 24 (exp)
    PLUS       [reduce using rule 25 (exp)]
    MINUS      reduce using rule 24 (exp)
    MINUS      [reduce using rule 25 (exp)]
    TIMES      reduce using rule 24 (exp)
    TIMES      [reduce using rule 25 (exp)]
    DIVIDE     reduce using rule 24 (exp)
    DIVIDE     [reduce using rule 25 (exp)]
    EQ         reduce using rule 24 (exp)
    EQ         [reduce using rule 25 (exp)]
    NEQ        reduce using rule 24 (exp)
    NEQ        [reduce using rule 25 (exp)]
    LT         reduce using rule 24 (exp)
    LT         [reduce using rule 25 (exp)]
    LE         reduce using rule 24 (exp)
    LE         [reduce using rule 25 (exp)]
    GT         reduce using rule 24 (exp)
    GT         [reduce using rule 25 (exp)]
    GE         reduce using rule 24 (exp)
    GE         [reduce using rule 25 (exp)]
    AND        reduce using rule 24 (exp)
    AND        [reduce using rule 25 (exp)]
    OR         reduce using rule 24 (exp)
    OR         [reduce using rule 25 (exp)]
    THEN       reduce using rule 24 (exp)
    THEN       [reduce using rule 25 (exp)]
    ELSE       reduce using rule 24 (exp)
    ELSE       [reduce using rule 25 (exp)]
    TO         reduce using rule 24 (exp)
    TO         [reduce using rule 25 (exp)]
    DO         reduce using rule 24 (exp)
    DO         [reduce using rule 25 (exp)]
    IN         reduce using rule 24 (exp)
    IN         [reduce using rule 25 (exp)]
    END        reduce using rule 24 (exp)
    END        [reduce using rule 25 (exp)]
    BREAK      reduce using rule 24 (exp)
    BREAK      [reduce using rule 25 (exp)]
    FUNCTION   reduce using rule 24 (exp)
    FUNCTION   [reduce using rule 25 (exp)]
    VAR        reduce using rule 24 (exp)
    VAR        [reduce using rule 25 (exp)]
    TYPE       reduce using rule 24 (exp)
    TYPE       [reduce using rule 25 (exp)]
    $default   reduce using rule 24 (exp)


State 86

   34 expSC: expSC SEMICOLON BREAK . SEMICOLON expSC

    SEMICOLON  shift, and go to state 101


State 87

   33 expSC: expSC . SEMICOLON expSC
   33      | expSC SEMICOLON expSC .
   34      | expSC . SEMICOLON BREAK SEMICOLON expSC

    $default  reduce using rule 33 (expSC)


State 88

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   21    | IF exp THEN exp . ELSE exp
   22    | IF exp THEN exp .
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    ELSE    shift, and go to state 102
    BREAK   shift, and go to state 44

    BREAK     [reduce using rule 22 (exp)]
    $default  reduce using rule 22 (exp)


State 89

   30 exp: WHILE exp DO expSC .
   33 expSC: expSC . SEMICOLON expSC
   34      | expSC . SEMICOLON BREAK SEMICOLON expSC

    SEMICOLON  shift, and go to state 52

    $default  reduce using rule 30 (exp)


State 90

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp
   53 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 103
    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44


State 91

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   29    | FOR lvalue ASSIGN exp . TO exp DO expSC
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    TO      shift, and go to state 104
    BREAK   shift, and go to state 44


State 92

   43 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   44       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 105

    $default  reduce using rule 48 (tyfields)

    tyfields  go to state 106


State 93

   42 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 107


State 94

   41 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 108
    lvalue  go to state 13


State 95

   40 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 109
    LBRACE  shift, and go to state 110
    ARRAY   shift, and go to state 111

    ty  go to state 112


State 96

   20 exp: LET dec IN expSC . END
   33 expSC: expSC . SEMICOLON expSC
   34      | expSC . SEMICOLON BREAK SEMICOLON expSC

    SEMICOLON  shift, and go to state 52
    END        shift, and go to state 113


State 97

   26 exp: lvalue LBRACK exp RBRACK . OF exp
   53 lvalue: lvalue LBRACK exp RBRACK .

    OF  shift, and go to state 114

    $default  reduce using rule 53 (lvalue)


State 98

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp
   54 funcparams: funcparams COMMA exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    $default  reduce using rule 54 (funcparams)


State 99

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp
   58 recparams: ID EQ exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    $default  reduce using rule 58 (recparams)


State 100

   57 recparams: recparams COMMA ID . EQ exp

    EQ  shift, and go to state 115


State 101

   34 expSC: expSC SEMICOLON BREAK SEMICOLON . expSC

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    MINUS     [reduce using rule 35 (expSC)]
    $default  reduce using rule 35 (expSC)

    exp     go to state 17
    expSC   go to state 116
    lvalue  go to state 13


State 102

   21 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 117
    lvalue  go to state 13


State 103

   53 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 53 (lvalue)


State 104

   29 exp: FOR lvalue ASSIGN exp TO . exp DO expSC

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 118
    lvalue  go to state 13


State 105

   49 tyfields: ID . COLON ID

    COLON  shift, and go to state 119


State 106

   43 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   44       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp
   50 tyfields: tyfields . COMMA ID COLON ID

    COMMA   shift, and go to state 120
    RPAREN  shift, and go to state 121


State 107

   42 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 122


State 108

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp
   41 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    $default  reduce using rule 41 (vardec)


State 109

   45 ty: ID .

    $default  reduce using rule 45 (ty)


State 110

   46 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 105

    $default  reduce using rule 48 (tyfields)

    tyfields  go to state 123


State 111

   47 ty: ARRAY . OF ID

    OF  shift, and go to state 124


State 112

   40 tydec: TYPE ID EQ ty .

    $default  reduce using rule 40 (tydec)


State 113

   20 exp: LET dec IN expSC END .

    $default  reduce using rule 20 (exp)


State 114

   26 exp: lvalue LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 125
    lvalue  go to state 13


State 115

   57 recparams: recparams COMMA ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 126
    lvalue  go to state 13


State 116

   33 expSC: expSC . SEMICOLON expSC
   34      | expSC . SEMICOLON BREAK SEMICOLON expSC
   34      | expSC SEMICOLON BREAK SEMICOLON expSC .

    $default  reduce using rule 34 (expSC)


State 117

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   21    | IF exp THEN exp ELSE exp .
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    BREAK     [reduce using rule 21 (exp)]
    $default  reduce using rule 21 (exp)


State 118

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   29    | FOR lvalue ASSIGN exp TO exp . DO expSC
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    DO      shift, and go to state 127
    BREAK   shift, and go to state 44


State 119

   49 tyfields: ID COLON . ID

    ID  shift, and go to state 128


State 120

   50 tyfields: tyfields COMMA . ID COLON ID

    ID  shift, and go to state 129


State 121

   43 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   44       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 130
    EQ     shift, and go to state 131


State 122

   42 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 132
    lvalue  go to state 13


State 123

   46 ty: LBRACE tyfields . RBRACE
   50 tyfields: tyfields . COMMA ID COLON ID

    COMMA   shift, and go to state 120
    RBRACE  shift, and go to state 133


State 124

   47 ty: ARRAY OF . ID

    ID  shift, and go to state 134


State 125

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   26    | lvalue LBRACK exp RBRACK OF exp .
   31    | exp . BREAK exp

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    BREAK     [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


State 126

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp
   57 recparams: recparams COMMA ID EQ exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    $default  reduce using rule 57 (recparams)


State 127

   29 exp: FOR lvalue ASSIGN exp TO exp DO . expSC

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    MINUS     [reduce using rule 35 (expSC)]
    $default  reduce using rule 35 (expSC)

    exp     go to state 17
    expSC   go to state 135
    lvalue  go to state 13


State 128

   49 tyfields: ID COLON ID .

    $default  reduce using rule 49 (tyfields)


State 129

   50 tyfields: tyfields COMMA ID . COLON ID

    COLON  shift, and go to state 136


State 130

   44 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 137


State 131

   43 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 138
    lvalue  go to state 13


State 132

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp
   42 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    $default  reduce using rule 42 (vardec)


State 133

   46 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 46 (ty)


State 134

   47 ty: ARRAY OF ID .

    $default  reduce using rule 47 (ty)


State 135

   29 exp: FOR lvalue ASSIGN exp TO exp DO expSC .
   33 expSC: expSC . SEMICOLON expSC
   34      | expSC . SEMICOLON BREAK SEMICOLON expSC

    SEMICOLON  shift, and go to state 52

    $default  reduce using rule 29 (exp)


State 136

   50 tyfields: tyfields COMMA ID COLON . ID

    ID  shift, and go to state 139


State 137

   44 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 140


State 138

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp
   43 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    $default  reduce using rule 43 (fundec)


State 139

   50 tyfields: tyfields COMMA ID COLON ID .

    $default  reduce using rule 50 (tyfields)


State 140

   44 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    NIL     shift, and go to state 10

    exp     go to state 141
    lvalue  go to state 13


State 141

    5 exp: exp . PLUS exp
    6    | exp . MINUS exp
    7    | exp . TIMES exp
    8    | exp . DIVIDE exp
   10    | exp . EQ exp
   11    | exp . NEQ exp
   12    | exp . LT exp
   13    | exp . LE exp
   14    | exp . GT exp
   15    | exp . GE exp
   16    | exp . AND exp
   17    | exp . OR exp
   31    | exp . BREAK exp
   44 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 32
    MINUS   shift, and go to state 33
    TIMES   shift, and go to state 34
    DIVIDE  shift, and go to state 35
    EQ      shift, and go to state 36
    NEQ     shift, and go to state 37
    LT      shift, and go to state 38
    LE      shift, and go to state 39
    GT      shift, and go to state 40
    GE      shift, and go to state 41
    AND     shift, and go to state 42
    OR      shift, and go to state 43
    BREAK   shift, and go to state 44

    $default  reduce using rule 44 (fundec)
